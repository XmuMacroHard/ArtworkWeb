<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-2.5.xsd" 
	xmlns:tx="http://www.springframework.org/schema/tx">
	
	<context:component-scan base-package="cn.edu.xmu.artwork"/>
	
	<!-- quartz
	要调用的工作类
	<bean id="quartzUtils" class="cn.edu.xmu.artwork.utils.impl.QuartzUtils"></bean>
	定义调用对象和调用对象的方法
	<bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		调用的类
		<property name="targetObject">
			<ref bean="quartzUtils"/>
		</property>
		调用类中的方法
		<property name="targetMethod">
			<value>work</value>
		</property>
	</bean>
	定义触发时间
	<bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="jobtask"/>
		</property>
		<property name="cronExpression">
			<value>0/1 * * * * ?</value>
		</property>
	</bean>
	总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 
	<bean id="startQuartz" lazy-init="true" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="doTime"/>
			</list>
		</property>
	</bean> -->
	
	<bean id="fileUtils" class="cn.edu.xmu.artwork.utils.impl.FileUtils"></bean>
	<bean id="imageUtils" class="cn.edu.xmu.artwork.utils.impl.ImageUtils"></bean>
	<!-- all entities -->
	<bean id="user" class="cn.edu.xmu.artwork.entity.User"></bean>
	<bean id="information" class="cn.edu.xmu.artwork.entity.Information"></bean>

	<bean id="customizationOrder" class="cn.edu.xmu.artwork.entity.CustomizationOrder"></bean>
	<bean id="purchaseOrder" class="cn.edu.xmu.artwork.entity.PurchaseOrder"></bean>
	<bean id="commodity" class="cn.edu.xmu.artwork.entity.Commodity"></bean>
	<bean id="test" class="cn.edu.xmu.artwork.entity.Test"></bean>
	<bean id="htest" class="cn.edu.xmu.artwork.entity.Htest"></bean>
	<bean id="payment" class="cn.edu.xmu.artwork.entity.Payment"></bean>
	<bean id="auction" class="cn.edu.xmu.artwork.entity.Auction"></bean>
	<bean id="auctionDate" class="cn.edu.xmu.artwork.entity.AuctionDate"></bean>
	<bean id="auctionOrder" class="cn.edu.xmu.artwork.entity.AuctionOrder"></bean>
	<bean id="bid" class="cn.edu.xmu.artwork.entity.Bid"></bean>
	
	<!-- all daos -->
	<bean id="userDao" class="cn.edu.xmu.artwork.dao.impl.UserDao" ></bean>		
	<bean id="informationDao" class="cn.edu.xmu.artwork.dao.impl.InformationDao">
		<property name="fileUtils" ref="fileUtils"></property>
		<property name="imgUtils" ref="imageUtils"></property>
	</bean>	
	
	
	<!-- all services -->
	<bean id="userService" class="cn.edu.xmu.artwork.service.impl.UserService">
		<property name="userDao" ref="userDao"></property>
	</bean>	
	<bean id="informationService" class="cn.edu.xmu.artwork.service.impl.InformationService">
		<property name="informationDao" ref="informationDao"></property>
		<property name="userDao" ref="userDao"></property>
	</bean>	
	
	<!-- allActions -->
	<bean id="inforAction" class="cn.edu.xmu.artwork.action.InformationAction" scope="prototype">
		<property name="information" ref="information"></property>
		<property name="informationService" ref="informationService"></property>
	</bean>	
	
	<bean id="userAction" class="cn.edu.xmu.artwork.action.UserAction" scope="prototype">
		<property name="user" ref="user"></property>
		<property name="userService" ref="userService"></property>
	</bean>
	
	<bean id="ajaxAction" class="cn.edu.xmu.artwork.action.AjaxAction" scope="prototype">
		<property name="user" ref="user"></property>
	</bean>
	
	<import resource="persistence.xml"/>
	</beans>